# Generated by sila2.code_generator; sila2.__version__: 0.10.4
from __future__ import annotations

from typing import TYPE_CHECKING

from sila2.server import MetadataDict
from utils.Application import SiLA as AgarSila

from ..generated.agarcontroller import AgarControllerBase, RingLightLamp_Responses, RingLightMotor_Responses

if TYPE_CHECKING:
    from ..server import Server


class AgarControllerImpl(AgarControllerBase):
    def __init__(self, parent_server: Server) -> None:
        super().__init__(parent_server=parent_server)

    def RingLightLamp(self, OnOff: bool, *, metadata: MetadataDict) -> RingLightLamp_Responses:

        agr = AgarSila()
        agr.ringLightLamp(OnOff)
        #raise NotImplementedError  # TODO

    def RingLightMotor(self, OnOff: bool, *, metadata: MetadataDict) -> RingLightMotor_Responses:

        agr = AgarSila()
        agr.ringLightMotor(OnOff)
        #raise NotImplementedError  # TODO

# Generated by sila2.code_generator; sila2.__version__: 0.10.4
from __future__ import annotations

from abc import ABC, abstractmethod
from typing import TYPE_CHECKING

from sila2.server import FeatureImplementationBase, MetadataDict

from .agarcontroller_types import RingLightLamp_Responses, RingLightMotor_Responses

if TYPE_CHECKING:
    from ...server import Server


class AgarControllerBase(FeatureImplementationBase, ABC):
    parent_server: Server

    def __init__(self, parent_server: Server):
        """
        Agar Streaking SiLA2 compatible controller
        """
        super().__init__(parent_server=parent_server)

    @abstractmethod
    def RingLightLamp(self, OnOff: bool, *, metadata: MetadataDict) -> RingLightLamp_Responses:
        """
        Turn On/Off Ring Light


        :param OnOff: true-On; false-Off Ring Light

        :param metadata: The SiLA Client Metadata attached to the call

        """
        pass

    @abstractmethod
    def RingLightMotor(self, OnOff: bool, *, metadata: MetadataDict) -> RingLightMotor_Responses:
        """
        Open Close Ring Light Motor


        :param OnOff: true-On; false-Off Ring Light Motor

        :param metadata: The SiLA Client Metadata attached to the call

        """
        pass

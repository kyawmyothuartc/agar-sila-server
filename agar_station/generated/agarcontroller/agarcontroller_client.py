# Generated by sila2.code_generator; sila2.__version__: 0.10.4
# -----
# This class does not do anything useful at runtime. Its only purpose is to provide type annotations.
# Since sphinx does not support .pyi files (yet?), this is a .py file.
# -----

from __future__ import annotations

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from typing import Iterable, Optional

    from agarcontroller_types import RingLightLamp_Responses, RingLightMotor_Responses
    from sila2.client import ClientMetadataInstance


class AgarControllerClient:
    """
    Agar Streaking SiLA2 compatible controller
    """

    def RingLightLamp(
        self, OnOff: bool, *, metadata: Optional[Iterable[ClientMetadataInstance]] = None
    ) -> RingLightLamp_Responses:
        """
        Turn On/Off Ring Light
        """
        ...

    def RingLightMotor(
        self, OnOff: bool, *, metadata: Optional[Iterable[ClientMetadataInstance]] = None
    ) -> RingLightMotor_Responses:
        """
        Open Close Ring Light Motor
        """
        ...
